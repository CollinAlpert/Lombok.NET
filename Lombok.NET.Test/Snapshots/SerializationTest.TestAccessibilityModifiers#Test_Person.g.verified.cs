//HintName: Test_Person.g.cs
// <auto-generated/>
using Lombok.NET;

namespace Test;
#nullable enable
public partial class Person
{
    public void Serialize(string path)
    {
        using global::System.IO.FileStream fileStream = global::System.IO.File.OpenWrite(path);
        using global::System.IO.BinaryWriter binaryWriter = new global::System.IO.BinaryWriter(fileStream);
        binaryWriter.Write(this.name);
    }

    public async global::System.Threading.Tasks.Task SerializeAsync(string path, global::System.Threading.CancellationToken cancellationToken = default)
    {
        await using global::System.IO.FileStream fileStream = global::System.IO.File.OpenWrite(path);
        await using global::System.IO.BinaryWriter binaryWriter = new global::System.IO.BinaryWriter(fileStream);
        binaryWriter.Write(this.name);
    }

    public void Deserialize(string path)
    {
        using global::System.IO.FileStream fileStream = global::System.IO.File.OpenRead(path);
        using global::System.IO.BinaryReader binaryReader = new global::System.IO.BinaryReader(fileStream);
        this.name = binaryReader.ReadString();
    }

    public async global::System.Threading.Tasks.Task DeserializeAsync(string path)
    {
        await using global::System.IO.FileStream fileStream = global::System.IO.File.OpenRead(path);
        using global::System.IO.BinaryReader binaryReader = new global::System.IO.BinaryReader(fileStream);
        this.name = binaryReader.ReadString();
    }
}